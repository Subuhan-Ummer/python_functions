# -*- coding: utf-8 -*-
"""Python_Functions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gAZeFLhirR8NByfZVroYQrstrtrgeQW-

# **Python-Functions**

---

## **`1. What does the len() function do in Python? Write a code example using len() to find the length of a list.`**

**Ans).** *The len() function returns the number of items (length) in an object such as a list, string, etc.*
"""

# example using len() to find the length of a list

my_list = [10, 20, 30, 40, 50]
print("Length of the list:", len(my_list))

"""## **`2. Write a Python function greet(name) that takes a person's name as input and prints "Hello, [name]!".`**"""

def greet(name):
    print(f"Hello, {name}!")

# Calling the greet function
greet("Subuhan P. Ummer")

"""## **`3. Write a Python function find_maximum(numbers) that takes a list of integers and returns the maximum value without using the built-in max() function. Use a loop to iterate through the list and compare values.`**"""

def find_maximum(numbers):
    if not numbers:  # Check if the list is empty
        return None

    max_num = numbers[0]  # Assume the first number is the largest initially
    for num in numbers[1:]:  # Loop through the rest of the list
        if num > max_num:
            max_num = num
    return max_num

# Test the find_maximum function
numbers_list = [5, 2, 9, 1, 7]
print("Maximum value:", find_maximum(numbers_list))

"""## **`4. Explain the difference between local and global variables in a Python function. Write a program where a global variable and a local variable have the same name and show how Python differentiates between them.`**

**Ans).** *Global variables are declared outside any function and are accessible throughout the program.
Local variables are declared inside a function and can only be used within that function.
Python differentiates between them using the scope of the variable.*

***Explanation: The function defines its own local variable 'x', which is different from the global 'x'***
"""

# difference between local variable and global variable.

x = 10  # Global variable

def example_function():
    x = 5  # Local variable
    print("Inside function, x =", x)

example_function()  # Output: Inside function, x = 5
print("Outside function, x =", x)  # Output: Outside function, x = 10

# Explanation: The function defines its own local variable 'x', which is different from the global 'x'.

"""## **`5. Create a function calculate_area(length, width=5) that calculates the area of a rectangle. If only the length is provided, the function should assume the width is 5. Show how the function behaves when called with and without the width argument.`**"""

# If only the length is provided, the function assumes the width is 5.
def calculate_area(length, width=5):
    return length * width

# Calling the function with both length and width
print("Area (length=10, width=6):", calculate_area(10, 6))  # Output: 60

# Calling the function with only length (width is defaulted to 5)
print("Area (length=10):", calculate_area(10))  # Output: 50